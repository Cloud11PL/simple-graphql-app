{"version":3,"sources":["Core/utils/createType.ts","Core/styles/theme/sizes.ts","Core/styles/theme/devices.ts","Common/services/queryClient.ts","Common/components/Layout/components/StyledLayout/StyledLayout.ts","Assets/Icons/ArrowClose/ArrowClose.tsx","Assets/Icons/ArrowOpen/ArrowOpen.tsx","Assets/Icons/Logo/Logo.tsx","Assets/Icons/Search/Search.tsx","Assets/Icons/Close/Close.tsx","Assets/Icons/Loading/Loading.tsx","Common/components/Layout/components/StyledLogo/StyledLogo.ts","Common/components/Layout/Layout.tsx","Common/components/DashedLine/DashedLine.ts","Common/components/ExpandableRow/components/Row/Row.ts","Common/components/ExpandableRow/ExpandableRow.tsx","Common/components/IconButton/components/StyledButton/StyledButton.ts","Common/components/IconButton/IconButton.tsx","Common/components/RowTitle/RowTitle.ts","Common/services/queries.ts","Common/hooks/usePlanetsByMovieId/usePlanetsByMovieId.tsx","Common/hooks/useFilms/useFilms.tsx","Common/hooks/usePlanets/index.ts","Common/components/FilmRow/components/FilmTable/components/Table/components/StyledTable/StyledTable.ts","Common/components/FilmRow/components/FilmTable/components/Table/components/StyledTHead/StyledTHead.ts","Common/components/FilmRow/components/FilmTable/components/Table/components/StyledTh/StyledTh.ts","Common/components/FilmRow/components/FilmTable/components/Table/components/StyledTr/StyledTr.ts","Common/components/FilmRow/components/FilmTable/components/Table/components/StyledTd/StyledTd.ts","Common/components/FilmRow/components/FilmTable/components/Table/Table.tsx","Common/components/FilmRow/components/FilmTable/components/TableWrapper/components/MobileTableRow/index.ts","Common/components/FilmRow/components/FilmTable/components/TableWrapper/components/MobileTableWrapper/index.ts","Common/components/FilmRow/components/FilmTable/components/TableWrapper/TableWrapper.tsx","Common/components/FilmRow/components/FilmTable/FilmTable.tsx","Common/components/FilmRow/FilmRow.tsx","Common/components/FilmsWrapper/FilmsWrapper.tsx","Core/utils/createAction.ts","Core/actions/actionTypes.ts","Common/actions/addMovieAction.ts","Common/helpers/getSuggestedPlanets.ts","Common/components/AddMovie/components/AddMoveFields/components/StyledInput/StyledInput.ts","Common/components/AddMovie/components/AddMoveFields/components/StyledForm/StyledForm.ts","Common/components/AddMovie/components/AddMoveFields/components/StyledLabel/StyledLabel.ts","Common/components/AddMovie/components/AddMoveFields/components/AutosuggestWrapper/AutosuggestWrapper.ts","Common/components/AddMovie/components/AddMoveFields/components/PlanetButtonWrapper/PlanetButtonWrapper.ts","Common/components/AddMovie/components/AddMoveFields/components/PlanetsWrapper/PlanetsWrapper.ts","Common/components/AddMovie/components/AddMoveFields/components/FieldError/FieldError.ts","Common/components/AddMovie/components/AddMoveFields/components/SubmitButton/SubmitButton.ts","Common/components/AddMovie/components/AddMoveFields/components/StyledSearchIcon/index.ts","Common/components/AddMovie/components/AddMoveFields/AddMovieFields.tsx","Common/components/AddMovie/AddMovie.tsx","Common/components/ManuallyAddedMovies/components/CustomMovie/CustomMovie.tsx","Common/components/ManuallyAddedMovies/ManuallyAddedMovies.tsx","Common/components/PageContainer/PageContainer.ts","Common/components/LoadingBox/components/LoadingWrapper/LoadingWrapper.ts","Common/components/LoadingBox/LoadingBox.tsx","Common/components/TableContainer/index.ts","Common/components/StyledSvg/index.ts","Common/components/Svg/index.ts","Core/routes.ts","Pages/Main/Main.tsx","Core/reducers/movieReducer.ts","Core/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["action","mobileS","mobileL","sizes","tablet","laptop","laptopL","desktop","client","ApolloClient","uri","cache","InMemoryCache","connectToDevTools","StyledLayout","styled","div","theme","ArrowClose","width","height","viewBox","fill","xmlns","cx","cy","r","transform","d","stroke","strokeWidth","strokeLinecap","ArrowOpen","Logo","className","Search","Close","Loading","StyledLogo","Layout","children","DashedLine","hr","Row","ifProp","ExpandableRow","title","renderExpanded","useState","isExpanded","setIsExpanded","handleClick","status","StyledButton","button","IconButton","onClick","RowTitle","p","fetchMoviesQuery","gql","fetchMoviePlanets","fetchAllPlanets","fetchAllPlanetsWithDetails","usePlanetsByMovieId","filmId","useQuery","variables","id","loading","data","rest","planets","path","useFilms","films","useAllPlanets","StyledTable","table","StyledTHead","thead","StyledTh","tr","th","StyledTd","td","Table","columns","useMemo","Header","accessor","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","renderArrow","column","isSorted","isSortedDesc","style","padding","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","row","i","getRowProps","cells","cell","getCellProps","MobileTableRow","MobileTableWrapper","getPropertyName","key","MobileTable","filteredPlanet","__typename","planet","Object","entries","value","equals","color","TableWrapper","isMobile","FilmTable","FilmRow","FilmsWrapper","isNil","film","createAction","type","payload","addMovie","addMovieAction","getSuggestedPlanets","partialName","filter","name","toLocaleLowerCase","includes","StyledInput","input","StyledFrom","form","StyledLabel","label","css","AutosuggestWrapper","PlanetButtonWrapper","PlanetsWrapper","FieldError","SubmitButton","Icon","AddMovieForm","setFieldValue","errors","addedPlanets","touched","usePlanets","suggestions","setSuggestions","autosuggestValue","setAutosuggestValue","useField","placeholder","field","useEffect","isEmpty","getSuggestionValue","suggestion","renderSuggestion","position","marginTop","hasError","movieTitle","planetId","newArr","propEq","removePlanetFromSelected","arrayHelpers","onSuggestionsFetchRequested","inputProps","onChange","e","newValue","onSuggestionSelected","isPlanetAdded","push","addMovieSchema","Yup","shape","required","matches","min","AddMovie","dispatch","useDispatch","initialValues","onSubmit","vals","resetForm","submitForm","validationSchema","handleReset","handleSubmit","values","onReset","AddMovieFields","CustomMovie","requiredIds","requiredPlanets","pathOr","ManuallyAddedMovies","movies","useSelector","state","movie","PageContainer","LoadingWrapper","LoadingBox","TableContainer","svg","attrs","version","xmlnsXlink","Svg","StyledSvg","ROUTES","exact","component","movieReducer","createReducer","newEntry","rootReducer","combineReducers","store","createStore","composeWithDevTools","App","devices","basename","process","routes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f316288.chunk.js","sourcesContent":["const createType = (group: string, action: string): string =>\n  `${group}/${action}`;\n\nexport { createType };\n","export default {\n  mobileS: 320,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop: 1920,\n};\n","import sizes from './sizes';\n\nexport default {\n  mobileS: `(min-width: ${sizes.mobileS}px)`,\n  mobileL: `(min-width: ${sizes.mobileL}px)`,\n  tablet: `(min-width: ${sizes.tablet}px)`,\n  laptop: `(min-width: ${sizes.laptop}px)`,\n  laptopL: `(min-width: ${sizes.laptopL}px)`,\n  desktop: `(min-width: ${sizes.desktop}px)`,\n};\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://swapi-graphql.netlify.app/.netlify/functions/index',\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n});\n\nexport default client;\n","import styled from 'styled-components';\nimport { theme } from 'styled-tools';\n\nconst StyledLayout = styled.div`\n  width: calc(100% - 4em);\n  margin: 2em;\n\n  @media ${theme('devices.laptop')} {\n    width: 70%;\n    margin-top: 2em;\n  }\n\n  min-height: 50vh;\n  padding: 2em;\n  background-color: #e0e6ee;\n  border-radius: 8px;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nexport default StyledLayout;\n","const ArrowClose = () => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"9\" cy=\"9\" r=\"9\" transform=\"rotate(-180 9 9)\" fill=\"#5FBBCF\" />\n    <path\n      d=\"M12.75 10.6875L9 6.74013L5.25 10.6875\"\n      stroke=\"white\"\n      strokeWidth=\"4\"\n      strokeLinecap=\"square\"\n    />\n  </svg>\n);\n\nexport default ArrowClose;\n\n","const ArrowOpen = () => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#00687F\" />\n    <path\n      d=\"M5.25 7.3125L9 11.2599L12.75 7.3125\"\n      stroke=\"white\"\n      strokeWidth=\"4\"\n      strokeLinecap=\"square\"\n    />\n  </svg>\n);\n\nexport default ArrowOpen;\n","import { Svg } from 'Common/components';\n\nconst Logo = ({ className } : { className?: string }) => (\n  <Svg\n    width=\"316\"\n    height=\"64\"\n    viewBox=\"0 0 316 64\"\n    fill=\"none\"\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M23.8135 63.7942C23.642 63.7942 23.5219 63.717 23.4533 63.5627L20.2376 56.4367C20.2033 56.3681 20.1519 56.3337 20.0833 56.3337H17.6908C17.605 56.3337 17.5621 56.3766 17.5621 56.4624V63.4855C17.5621 63.5713 17.5278 63.6484 17.4592 63.717C17.4078 63.7685 17.3392 63.7942 17.2534 63.7942H14.2435C14.1578 63.7942 14.0806 63.7685 14.012 63.717C13.9605 63.6484 13.9348 63.5713 13.9348 63.4855V46.0949C13.9348 46.0091 13.9605 45.9405 14.012 45.8891C14.0806 45.8205 14.1578 45.7862 14.2435 45.7862H21.6011C22.6987 45.7862 23.6592 46.0091 24.4824 46.4551C25.3228 46.901 25.9659 47.5355 26.4118 48.3588C26.8749 49.182 27.1064 50.1338 27.1064 51.2143C27.1064 52.3806 26.8148 53.3839 26.2317 54.2242C25.6486 55.0475 24.834 55.6306 23.7878 55.9736C23.702 56.0079 23.6763 56.0679 23.7106 56.1537L27.2093 63.4341C27.2436 63.5027 27.2608 63.5541 27.2608 63.5884C27.2608 63.7256 27.1664 63.7942 26.9778 63.7942H23.8135ZM17.6908 48.899C17.605 48.899 17.5621 48.9419 17.5621 49.0276V53.4267C17.5621 53.5125 17.605 53.5554 17.6908 53.5554H21.0608C21.7812 53.5554 22.3643 53.341 22.8102 52.9122C23.2733 52.4835 23.5048 51.9261 23.5048 51.24C23.5048 50.554 23.2733 49.9966 22.8102 49.5679C22.3643 49.122 21.7812 48.899 21.0608 48.899H17.6908Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M46.0986 48.5903C46.0986 48.676 46.0643 48.7532 45.9957 48.8218C45.9443 48.8733 45.8757 48.899 45.7899 48.899H37.3519C37.2661 48.899 37.2233 48.9419 37.2233 49.0276V53.0151C37.2233 53.1009 37.2661 53.1438 37.3519 53.1438H42.8829C42.9687 53.1438 43.0373 53.1781 43.0887 53.2467C43.1573 53.2981 43.1916 53.3667 43.1916 53.4525V55.9479C43.1916 56.0336 43.1573 56.1108 43.0887 56.1794C43.0373 56.2308 42.9687 56.2566 42.8829 56.2566H37.3519C37.2661 56.2566 37.2233 56.2994 37.2233 56.3852V60.5528C37.2233 60.6385 37.2661 60.6814 37.3519 60.6814H45.7899C45.8757 60.6814 45.9443 60.7157 45.9957 60.7843C46.0643 60.8358 46.0986 60.9044 46.0986 60.9901V63.4855C46.0986 63.5713 46.0643 63.6484 45.9957 63.717C45.9443 63.7685 45.8757 63.7942 45.7899 63.7942H33.9046C33.8189 63.7942 33.7417 63.7685 33.6731 63.717C33.6217 63.6484 33.5959 63.5713 33.5959 63.4855V46.0949C33.5959 46.0091 33.6217 45.9405 33.6731 45.8891C33.7417 45.8205 33.8189 45.7862 33.9046 45.7862H45.7899C45.8757 45.7862 45.9443 45.8205 45.9957 45.8891C46.0643 45.9405 46.0986 46.0091 46.0986 46.0949V48.5903Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M58.8068 64C57.469 64 56.2942 63.7428 55.2823 63.2283C54.2705 62.6966 53.4901 61.9591 52.9413 61.0158C52.3925 60.0726 52.1181 58.9835 52.1181 57.7487V51.806C52.1181 50.5712 52.3925 49.4821 52.9413 48.5388C53.4901 47.5956 54.2705 46.8667 55.2823 46.3522C56.2942 45.8376 57.469 45.5804 58.8068 45.5804C60.1274 45.5804 61.285 45.8291 62.2797 46.3264C63.2916 46.8066 64.072 47.5012 64.6208 48.4102C65.1868 49.302 65.4697 50.3396 65.4697 51.523C65.4697 51.6774 65.3668 51.7717 65.161 51.806L62.1511 51.9861H62.0997C61.9282 51.9861 61.8424 51.8918 61.8424 51.7031C61.8424 50.7941 61.5594 50.0652 60.9935 49.5164C60.4446 48.9676 59.7157 48.6932 58.8068 48.6932C57.8806 48.6932 57.1346 48.9676 56.5686 49.5164C56.0198 50.0652 55.7454 50.7941 55.7454 51.7031V57.903C55.7454 58.7948 56.0198 59.5152 56.5686 60.064C57.1346 60.6128 57.8806 60.8872 58.8068 60.8872C59.7157 60.8872 60.4446 60.6128 60.9935 60.064C61.5594 59.5152 61.8424 58.7948 61.8424 57.903C61.8424 57.7144 61.9453 57.62 62.1511 57.62L65.161 57.7487C65.2468 57.7487 65.3154 57.7744 65.3668 57.8258C65.4354 57.8773 65.4697 57.9373 65.4697 58.0059C65.4697 59.1893 65.1868 60.2355 64.6208 61.1445C64.072 62.0534 63.2916 62.7566 62.2797 63.254C61.285 63.7513 60.1274 64 58.8068 64Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M81.8673 63.7942C81.6958 63.7942 81.5757 63.717 81.5071 63.5627L78.2914 56.4367C78.2571 56.3681 78.2057 56.3337 78.1371 56.3337H75.7446C75.6588 56.3337 75.6159 56.3766 75.6159 56.4624V63.4855C75.6159 63.5713 75.5816 63.6484 75.513 63.717C75.4616 63.7685 75.393 63.7942 75.3072 63.7942H72.2973C72.2116 63.7942 72.1344 63.7685 72.0658 63.717C72.0143 63.6484 71.9886 63.5713 71.9886 63.4855V46.0949C71.9886 46.0091 72.0143 45.9405 72.0658 45.8891C72.1344 45.8205 72.2116 45.7862 72.2973 45.7862H79.6549C80.7525 45.7862 81.7129 46.0091 82.5362 46.4551C83.3765 46.901 84.0197 47.5355 84.4656 48.3588C84.9287 49.182 85.1602 50.1338 85.1602 51.2143C85.1602 52.3806 84.8686 53.3839 84.2855 54.2242C83.7024 55.0475 82.8878 55.6306 81.8416 55.9736C81.7558 56.0079 81.7301 56.0679 81.7644 56.1537L85.2631 63.4341C85.2974 63.5027 85.3146 63.5541 85.3146 63.5884C85.3146 63.7256 85.2202 63.7942 85.0316 63.7942H81.8673ZM75.7446 48.899C75.6588 48.899 75.6159 48.9419 75.6159 49.0276V53.4267C75.6159 53.5125 75.6588 53.5554 75.7446 53.5554H79.1146C79.835 53.5554 80.4181 53.341 80.864 52.9122C81.3271 52.4835 81.5586 51.9261 81.5586 51.24C81.5586 50.554 81.3271 49.9966 80.864 49.5679C80.4181 49.122 79.835 48.899 79.1146 48.899H75.7446Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M98.1841 64C96.8635 64 95.6972 63.7428 94.6854 63.2283C93.6906 62.7137 92.9103 61.9934 92.3443 61.0673C91.7955 60.124 91.5211 59.0435 91.5211 57.8258V46.0949C91.5211 46.0091 91.5468 45.9405 91.5983 45.8891C91.6669 45.8205 91.7441 45.7862 91.8298 45.7862H94.8397C94.9255 45.7862 94.9941 45.8205 95.0455 45.8891C95.1141 45.9405 95.1484 46.0091 95.1484 46.0949V57.8516C95.1484 58.7605 95.4228 59.498 95.9716 60.064C96.5376 60.6128 97.2751 60.8872 98.1841 60.8872C99.093 60.8872 99.8219 60.6128 100.371 60.064C100.937 59.498 101.22 58.7605 101.22 57.8516V46.0949C101.22 46.0091 101.245 45.9405 101.297 45.8891C101.365 45.8205 101.443 45.7862 101.528 45.7862H104.538C104.624 45.7862 104.693 45.8205 104.744 45.8891C104.813 45.9405 104.847 46.0091 104.847 46.0949V57.8258C104.847 59.0435 104.564 60.124 103.998 61.0673C103.449 61.9934 102.669 62.7137 101.657 63.2283C100.662 63.7428 99.5046 64 98.1841 64Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M111.996 63.7942C111.911 63.7942 111.833 63.7685 111.765 63.717C111.713 63.6484 111.688 63.5713 111.688 63.4855V46.0949C111.688 46.0091 111.713 45.9405 111.765 45.8891C111.833 45.8205 111.911 45.7862 111.996 45.7862H115.006C115.092 45.7862 115.161 45.8205 115.212 45.8891C115.281 45.9405 115.315 46.0091 115.315 46.0949V63.4855C115.315 63.5713 115.281 63.6484 115.212 63.717C115.161 63.7685 115.092 63.7942 115.006 63.7942H111.996Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M134.73 45.7862C134.816 45.7862 134.884 45.8205 134.936 45.8891C135.005 45.9405 135.039 46.0091 135.039 46.0949V48.616C135.039 48.7018 135.005 48.779 134.936 48.8476C134.884 48.899 134.816 48.9247 134.73 48.9247H130.125C130.039 48.9247 129.997 48.9676 129.997 49.0534V63.4855C129.997 63.5713 129.962 63.6484 129.894 63.717C129.842 63.7685 129.774 63.7942 129.688 63.7942H126.678C126.592 63.7942 126.515 63.7685 126.446 63.717C126.395 63.6484 126.369 63.5713 126.369 63.4855V49.0534C126.369 48.9676 126.326 48.9247 126.241 48.9247H121.764C121.679 48.9247 121.601 48.899 121.533 48.8476C121.481 48.779 121.456 48.7018 121.456 48.616V46.0949C121.456 46.0091 121.481 45.9405 121.533 45.8891C121.601 45.8205 121.679 45.7862 121.764 45.7862H134.73Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M152.789 45.992C152.874 45.8548 152.994 45.7862 153.149 45.7862H156.159C156.244 45.7862 156.313 45.8205 156.364 45.8891C156.433 45.9405 156.467 46.0091 156.467 46.0949V63.4855C156.467 63.5713 156.433 63.6484 156.364 63.717C156.313 63.7685 156.244 63.7942 156.159 63.7942H153.149C153.063 63.7942 152.986 63.7685 152.917 63.717C152.866 63.6484 152.84 63.5713 152.84 63.4855V52.1405C152.84 52.0718 152.823 52.0375 152.789 52.0375C152.754 52.0375 152.72 52.0633 152.686 52.1147L149.959 56.3852C149.873 56.5224 149.753 56.591 149.599 56.591H148.081C147.926 56.591 147.806 56.5224 147.721 56.3852L144.994 52.1147C144.959 52.0633 144.925 52.0461 144.891 52.0633C144.856 52.0633 144.839 52.0976 144.839 52.1662V63.4855C144.839 63.5713 144.805 63.6484 144.736 63.717C144.685 63.7685 144.616 63.7942 144.531 63.7942H141.521C141.435 63.7942 141.358 63.7685 141.289 63.717C141.238 63.6484 141.212 63.5713 141.212 63.4855V46.0949C141.212 46.0091 141.238 45.9405 141.289 45.8891C141.358 45.8205 141.435 45.7862 141.521 45.7862H144.531C144.685 45.7862 144.805 45.8548 144.891 45.992L148.75 51.9861C148.801 52.089 148.853 52.089 148.904 51.9861L152.789 45.992Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M175.963 48.5903C175.963 48.676 175.929 48.7532 175.861 48.8218C175.809 48.8733 175.741 48.899 175.655 48.899H167.217C167.131 48.899 167.088 48.9419 167.088 49.0276V53.0151C167.088 53.1009 167.131 53.1438 167.217 53.1438H172.748C172.834 53.1438 172.902 53.1781 172.954 53.2467C173.022 53.2981 173.056 53.3667 173.056 53.4525V55.9479C173.056 56.0336 173.022 56.1108 172.954 56.1794C172.902 56.2308 172.834 56.2566 172.748 56.2566H167.217C167.131 56.2566 167.088 56.2994 167.088 56.3852V60.5528C167.088 60.6385 167.131 60.6814 167.217 60.6814H175.655C175.741 60.6814 175.809 60.7157 175.861 60.7843C175.929 60.8358 175.963 60.9044 175.963 60.9901V63.4855C175.963 63.5713 175.929 63.6484 175.861 63.717C175.809 63.7685 175.741 63.7942 175.655 63.7942H163.769C163.684 63.7942 163.607 63.7685 163.538 63.717C163.486 63.6484 163.461 63.5713 163.461 63.4855V46.0949C163.461 46.0091 163.486 45.9405 163.538 45.8891C163.607 45.8205 163.684 45.7862 163.769 45.7862H175.655C175.741 45.7862 175.809 45.8205 175.861 45.8891C175.929 45.9405 175.963 46.0091 175.963 46.0949V48.5903Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M192.685 46.0949C192.685 46.0091 192.711 45.9405 192.762 45.8891C192.831 45.8205 192.908 45.7862 192.994 45.7862H196.003C196.089 45.7862 196.158 45.8205 196.209 45.8891C196.278 45.9405 196.312 46.0091 196.312 46.0949V63.4855C196.312 63.5713 196.278 63.6484 196.209 63.717C196.158 63.7685 196.089 63.7942 196.003 63.7942H193.096C192.925 63.7942 192.805 63.7256 192.736 63.5884L186.073 52.5778C186.039 52.5263 186.005 52.5092 185.97 52.5263C185.936 52.5263 185.919 52.5606 185.919 52.6292L185.97 63.4855C185.97 63.5713 185.936 63.6484 185.867 63.717C185.816 63.7685 185.747 63.7942 185.662 63.7942H182.652C182.566 63.7942 182.489 63.7685 182.42 63.717C182.369 63.6484 182.343 63.5713 182.343 63.4855V46.0949C182.343 46.0091 182.369 45.9405 182.42 45.8891C182.489 45.8205 182.566 45.7862 182.652 45.7862H185.559C185.73 45.7862 185.85 45.8548 185.919 45.992L192.556 56.9512C192.59 57.0026 192.625 57.0283 192.659 57.0283C192.693 57.0112 192.711 56.9683 192.711 56.8997L192.685 46.0949Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M215.736 45.7862C215.822 45.7862 215.89 45.8205 215.942 45.8891C216.011 45.9405 216.045 46.0091 216.045 46.0949V48.616C216.045 48.7018 216.011 48.779 215.942 48.8476C215.89 48.899 215.822 48.9247 215.736 48.9247H211.131C211.045 48.9247 211.003 48.9676 211.003 49.0534V63.4855C211.003 63.5713 210.968 63.6484 210.9 63.717C210.848 63.7685 210.78 63.7942 210.694 63.7942H207.684C207.598 63.7942 207.521 63.7685 207.452 63.717C207.401 63.6484 207.375 63.5713 207.375 63.4855V49.0534C207.375 48.9676 207.332 48.9247 207.247 48.9247H202.77C202.685 48.9247 202.607 48.899 202.539 48.8476C202.487 48.779 202.462 48.7018 202.462 48.616V46.0949C202.462 46.0091 202.487 45.9405 202.539 45.8891C202.607 45.8205 202.685 45.7862 202.77 45.7862H215.736Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M243.653 45.7862C243.738 45.7862 243.807 45.8205 243.858 45.8891C243.927 45.9405 243.961 46.0091 243.961 46.0949V48.616C243.961 48.7018 243.927 48.779 243.858 48.8476C243.807 48.899 243.738 48.9247 243.653 48.9247H239.048C238.962 48.9247 238.919 48.9676 238.919 49.0534V63.4855C238.919 63.5713 238.885 63.6484 238.816 63.717C238.765 63.7685 238.696 63.7942 238.61 63.7942H235.6C235.515 63.7942 235.437 63.7685 235.369 63.717C235.317 63.6484 235.292 63.5713 235.292 63.4855V49.0534C235.292 48.9676 235.249 48.9247 235.163 48.9247H230.687C230.601 48.9247 230.524 48.899 230.455 48.8476C230.404 48.779 230.378 48.7018 230.378 48.616V46.0949C230.378 46.0091 230.404 45.9405 230.455 45.8891C230.524 45.8205 230.601 45.7862 230.687 45.7862H243.653Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M259.924 63.7942C259.753 63.7942 259.641 63.7085 259.59 63.537L258.818 61.0158C258.784 60.9472 258.741 60.9129 258.689 60.9129H252.361C252.309 60.9129 252.267 60.9472 252.232 61.0158L251.486 63.537C251.435 63.7085 251.323 63.7942 251.152 63.7942H247.885C247.782 63.7942 247.705 63.7685 247.653 63.717C247.602 63.6484 247.593 63.5541 247.627 63.4341L253.184 46.0434C253.236 45.8719 253.347 45.7862 253.519 45.7862H257.558C257.729 45.7862 257.841 45.8719 257.892 46.0434L263.449 63.4341C263.466 63.4684 263.474 63.5112 263.474 63.5627C263.474 63.717 263.38 63.7942 263.191 63.7942H259.924ZM253.158 57.9545C253.141 58.0574 253.176 58.1088 253.261 58.1088H257.789C257.892 58.1088 257.926 58.0574 257.892 57.9545L255.577 50.3139C255.559 50.2453 255.534 50.2196 255.499 50.2367C255.465 50.2367 255.439 50.2625 255.422 50.3139L253.158 57.9545Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M274.638 64C273.266 64 272.066 63.7856 271.037 63.3569C270.008 62.911 269.21 62.285 268.644 61.4789C268.095 60.6557 267.821 59.7038 267.821 58.6233V58.0574C267.821 57.9716 267.847 57.903 267.898 57.8516C267.967 57.783 268.044 57.7487 268.13 57.7487H271.062C271.148 57.7487 271.217 57.783 271.268 57.8516C271.337 57.903 271.371 57.9716 271.371 58.0574V58.4433C271.371 59.1293 271.688 59.7124 272.323 60.1926C272.957 60.6557 273.815 60.8872 274.896 60.8872C275.804 60.8872 276.482 60.6986 276.928 60.3212C277.374 59.9268 277.597 59.4466 277.597 58.8806C277.597 58.469 277.46 58.126 277.185 57.8516C276.911 57.56 276.533 57.3113 276.053 57.1055C275.59 56.8826 274.844 56.5824 273.815 56.2051C272.666 55.8107 271.688 55.4076 270.882 54.996C270.093 54.5844 269.424 54.027 268.876 53.3238C268.344 52.6035 268.078 51.7203 268.078 50.6741C268.078 49.6451 268.344 48.7447 268.876 47.9729C269.407 47.2011 270.145 46.6094 271.088 46.1978C272.031 45.7862 273.12 45.5804 274.355 45.5804C275.659 45.5804 276.816 45.8119 277.828 46.275C278.857 46.738 279.655 47.3898 280.221 48.2301C280.804 49.0534 281.095 50.0138 281.095 51.1114V51.4973C281.095 51.5831 281.061 51.6602 280.993 51.7288C280.941 51.7803 280.872 51.806 280.787 51.806H277.828C277.742 51.806 277.665 51.7803 277.597 51.7288C277.545 51.6602 277.52 51.5831 277.52 51.4973V51.2915C277.52 50.5712 277.219 49.9623 276.619 49.465C276.036 48.9505 275.23 48.6932 274.201 48.6932C273.395 48.6932 272.76 48.8647 272.297 49.2077C271.851 49.5507 271.628 50.0224 271.628 50.6226C271.628 51.0514 271.757 51.4116 272.014 51.7031C272.289 51.9947 272.683 52.2605 273.198 52.5006C273.729 52.7236 274.544 53.0323 275.642 53.4267C276.859 53.8727 277.811 54.2671 278.497 54.6101C279.2 54.9531 279.826 55.4676 280.375 56.1537C280.941 56.8225 281.224 57.6972 281.224 58.7777C281.224 60.3898 280.632 61.6676 279.449 62.6108C278.266 63.537 276.662 64 274.638 64Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M287.931 63.7942C287.846 63.7942 287.768 63.7685 287.7 63.717C287.648 63.6484 287.623 63.5713 287.623 63.4855V46.0949C287.623 46.0091 287.648 45.9405 287.7 45.8891C287.768 45.8205 287.846 45.7862 287.931 45.7862H290.941C291.027 45.7862 291.096 45.8205 291.147 45.8891C291.216 45.9405 291.25 46.0091 291.25 46.0949V53.2981C291.25 53.3496 291.267 53.3839 291.301 53.401C291.336 53.401 291.37 53.3839 291.404 53.3496L297.347 45.9663C297.45 45.8462 297.579 45.7862 297.733 45.7862H301.129C301.266 45.7862 301.352 45.8291 301.386 45.9148C301.42 45.9834 301.403 46.0692 301.335 46.1721L295.598 53.5039C295.546 53.5725 295.538 53.6325 295.572 53.684L301.643 63.4341C301.678 63.537 301.695 63.597 301.695 63.6141C301.695 63.7342 301.609 63.7942 301.437 63.7942H298.042C297.87 63.7942 297.75 63.7256 297.681 63.5884L293.102 56.1794C293.085 56.1451 293.059 56.1279 293.025 56.1279C292.991 56.1279 292.957 56.1451 292.922 56.1794L291.301 58.2117C291.267 58.2803 291.25 58.3318 291.25 58.3661V63.4855C291.25 63.5713 291.216 63.6484 291.147 63.717C291.096 63.7685 291.027 63.7942 290.941 63.7942H287.931Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M0 37.4224L14.5403 11.3607H7.57536L14.0238 0.299377H48.2851L43.3079 11.3607H25.4651L23.2582 15.6307H34.9656L31.8979 22.1068H19.9088L11.9891 37.4382H0V37.4224Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M31.8978 37.4224L48.5981 0.299377H69.5398C72.0284 0.567243 73.8753 1.35508 75.0962 2.6629C76.3326 3.97071 76.99 5.71972 77.0526 7.90991C76.5831 11.2031 75.7848 13.7399 74.6423 15.5204C73.484 17.301 71.9815 18.7979 70.1503 19.9954C68.3034 21.1929 65.893 22.1383 62.9349 22.8316L64.2966 26.3769H83.235L80.0734 37.4382H56.8777L50.1632 25.1794L45.2017 37.4382H31.8978V37.4224ZM56.4864 9.54862L53.7161 16.4028H62.3245C62.7784 16.4028 63.3418 16.2137 64.0148 15.8513C64.6879 15.4889 65.3139 14.5593 65.8774 13.0624C66.3156 11.6443 66.3469 10.6989 65.9713 10.2419C65.5957 9.78497 65.22 9.56438 64.8444 9.56438H56.4864V9.54862Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M121.065 19.0657C120.423 23.131 119.077 26.5975 116.98 29.4495C114.851 32.3172 112.081 34.4601 108.653 35.9098C105.194 37.3436 101.234 38.0684 96.8049 38.0684C92.3755 38.0684 88.76 37.3436 85.9897 35.894C83.235 34.4444 81.482 32.3015 80.6994 29.4652C79.9638 26.629 80.2142 23.1625 81.4507 19.0657C82.3898 15.9616 83.6263 13.2357 85.1914 10.8722C86.7253 8.50867 88.5409 6.52332 90.6069 4.91612C92.6572 3.30893 94.9267 2.0799 97.4466 1.24479C99.9509 0.409677 102.643 0 105.538 0C109.373 0 112.55 0.74057 115.07 2.20595C117.621 3.67134 119.406 5.83002 120.439 8.682C121.472 11.5497 121.691 15.0005 121.065 19.0657ZM93.6746 19.176C93.0642 21.5553 93.0329 23.6352 93.612 25.4C94.1911 27.1647 96.0067 28.0471 99.0274 28.0471C101.36 28.0471 103.206 27.5902 104.568 26.6605C105.914 25.7309 106.853 24.6752 107.37 23.4776C107.886 22.2801 108.371 20.8463 108.81 19.176C109.201 16.7968 109.091 14.7169 108.497 12.9363C107.918 11.1558 106.118 10.2734 103.097 10.2734C98.3231 10.2734 95.1928 13.2357 93.6746 19.176Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M123.46 37.4224L127.091 11.3607H120.126L121.957 0.299377H139.111L147.845 14.1811L148.69 0.299377H159.161L158.394 37.4224H146.42L136.826 23.5407L135.464 37.4224H123.46V37.4224Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M187.866 0.299377L188.867 11.3607H178.224L179.555 37.4382H167.581L167.3 11.3607H156.656L156.985 0.299377H187.866V0.299377Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M184.407 27.732L183.765 18.4827H197.46L198.571 27.732H184.407Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M202.484 37.4224L199.135 11.3607H192.17L191.027 0.299377H225.289L227.887 11.3607H210.044L210.764 15.6307H222.471L223.849 22.1068H211.86L212.58 26.3769H234.413L237.137 37.4382H202.484V37.4224Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M237.09 37.4224L227.949 0.299377H238.42L252.491 14.1811L247.999 0.299377H267.376L271.79 11.3607H262.492L271.993 37.4382H260.02L245.072 23.5564L249.048 37.4382H237.09V37.4224Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M281.838 37.4224L271.461 11.3607H264.496L260.38 0.299377H286.048C288.615 0.299377 291.072 0.693298 293.436 1.48114C295.799 2.26898 298.022 3.32468 300.072 4.66401C302.138 6.00334 304.251 7.81537 306.379 10.0844C308.524 12.3691 310.59 15.3314 312.546 18.9869C314.174 22.3589 315.176 25.2424 315.536 27.6059C315.88 29.9694 315.645 31.8445 314.831 33.2153C314.002 34.5862 312.671 35.6419 310.825 36.3982C308.962 37.1545 306.333 37.5012 302.936 37.4224H281.838V37.4224ZM281.853 9.50135L290.055 28.1732H296.848C298.382 28.1732 299.446 27.8423 300.072 27.1647C300.682 26.4872 301.027 25.6206 301.105 24.5649C301.183 23.5092 300.62 21.6183 299.446 18.8766C298.178 16.3713 296.957 14.5278 295.799 13.3303C294.641 12.1327 293.436 11.2031 292.199 10.5255C290.963 9.848 289.617 9.51711 288.161 9.51711H281.853V9.50135Z\"\n      fill=\"#1BA1BE\"\n    />\n  </Svg>\n);\n\nexport default Logo;\n","import { Svg } from 'Common/components';\n\nconst Search = ({ className }: { className?: string }) => (\n  <Svg\n    width=\"17\"\n    height=\"17\"\n    viewBox=\"0 0 17 17\"\n    fill=\"none\"\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15.7775 14.9061L14.8876 15.7961C14.591 16.0927 14.1275 16.0927 13.8308 15.7961L10.7161 12.6628C10.5678 12.5145 10.4936 12.3291 10.4936 12.1251V11.6246C9.38123 12.4959 8.00927 12.9965 6.48899 12.9965C2.91078 12.9965 0 10.0857 0 6.50753C0 2.91078 2.91078 0 6.50753 0C10.1043 0 13.0151 2.91078 13.0151 6.50753C13.0151 8.00927 12.4959 9.39977 11.6431 10.5122H12.1437C12.3476 10.5122 12.533 10.5863 12.6813 10.7346L15.7961 13.8494C16.0742 14.1275 16.0742 14.6095 15.7775 14.9061ZM10.5122 6.50753C10.5122 4.30127 8.71379 2.5029 6.50753 2.5029C4.30127 2.5029 2.5029 4.30127 2.5029 6.50753C2.5029 8.71379 4.30127 10.5122 6.50753 10.5122C8.71379 10.5122 10.5122 8.71379 10.5122 6.50753Z\"\n      fill=\"#00687F\"\n    />\n  </Svg>\n);\n\nexport default Search;\n","const Close = () => (\n  <svg\n    width=\"13\"\n    height=\"13\"\n    viewBox=\"0 0 13 13\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M13 1.625C13 1.7439 12.9604 1.82317 12.8811 1.90244L8.36281 6.42073C8.28354 6.5 8.28354 6.57927 8.36281 6.65854L12.8018 11.0976C12.8811 11.1768 12.9207 11.2561 12.9207 11.375C12.9207 11.4939 12.8811 11.5732 12.8018 11.6524L11.6524 12.8018C11.5732 12.8811 11.4939 12.9207 11.375 12.9207C11.2561 12.9207 11.1768 12.8811 11.0976 12.8018L6.65854 8.36281C6.57927 8.28354 6.5 8.28354 6.42073 8.36281L1.90244 12.8811C1.82317 12.9604 1.7439 13 1.625 13C1.5061 13 1.42683 12.9604 1.34756 12.8811L0.198171 11.7713C0.118902 11.6921 0.0792683 11.6128 0.0792683 11.4939C0.0792683 11.375 0.118902 11.2957 0.198171 11.2165L4.7561 6.65854C4.83537 6.57927 4.83537 6.5 4.7561 6.42073L0.118902 1.78354C0.0396341 1.70427 0 1.625 0 1.5061C0 1.3872 0.0396341 1.30793 0.118902 1.22866L1.22866 0.118902C1.30793 0.0396341 1.3872 0 1.5061 0C1.625 0 1.70427 0.0396341 1.78354 0.118902L6.42073 4.7561C6.5 4.83537 6.57927 4.83537 6.65854 4.7561L11.2165 0.198171C11.2957 0.118902 11.375 0.0792683 11.4939 0.0792683C11.6128 0.0792683 11.6921 0.118902 11.7713 0.198171L12.8811 1.34756C12.9604 1.42683 13 1.5061 13 1.625Z\"\n      fill=\"#555555\"\n    />\n  </svg>\n);\n\nexport default Close;\n","const Loading = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M22.0553 9.38381C21.7719 9.38381 21.5122 9.18729 21.4177 8.89251C20.0954 4.39713 16.1755 1.4002 11.6652 1.4002C7.72176 1.4002 4.10886 3.783 2.43228 7.49231C2.26698 7.83622 1.86555 7.98361 1.53496 7.83622C1.20437 7.66426 1.06268 7.24666 1.20437 6.90275C3.11708 2.70214 7.22587 0 11.6652 0C16.7658 0 21.2052 3.41453 22.6929 8.47491C22.8109 8.84338 22.5984 9.23642 22.2442 9.33468C22.1734 9.35924 22.1261 9.38381 22.0553 9.38381Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M0.708413 3.75845L1.98356 6.80451L4.93527 5.478L4.22686 7.34493L1.27514 8.67144L0 5.62539L0.708413 3.75845Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M11.6653 24C6.5647 24 2.12532 20.5855 0.637652 15.5251C0.519583 15.1566 0.732106 14.7636 1.08631 14.6653C1.44052 14.5425 1.81834 14.7636 1.91279 15.1321C3.23516 19.5783 7.15504 22.5998 11.6653 22.5998C15.6088 22.5998 19.2217 20.217 20.8982 16.5077C21.0635 16.1638 21.465 16.0164 21.7956 16.1638C22.1262 16.3357 22.2678 16.7533 22.1262 17.0973C20.2134 21.2733 16.1046 24 11.6653 24Z\"\n      fill=\"#1BA1BE\"\n    />\n    <path\n      d=\"M22.622 20.2415L21.3469 17.1709L18.3951 18.522L19.1036 16.6551L22.0553 15.304L23.3304 18.3746L22.622 20.2415Z\"\n      fill=\"#1BA1BE\"\n    />\n  </svg>\n);\n\nexport default Loading;\n","import styled from 'styled-components';\nimport { Logo } from 'Assets/Icons';\n\nconst StyledLogo = styled(Logo)`\n  max-width: 80%;\n  margin-bottom: 1em;\n`;\n\nexport default StyledLogo;\n","import * as React from 'react';\n\nimport { StyledLayout, StyledLogo as Logo } from './components';\n\nconst Layout: React.FC = ({ children }) => {\n  return (\n    <StyledLayout>\n      <Logo /> \n      {children}\n    </StyledLayout>\n  );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst DashedLine = styled.hr`\n    width: 100%;\n    border-top: 2px dashed white;\n`;\n\nexport default DashedLine;\n","import styled from 'styled-components';\nimport { ifProp } from 'styled-tools';\n\ntype Props = {\n  isExpanded?: boolean;\n};\n\nconst Row = styled.div<Props>`\n  background-color: white;\n  box-shadow: ${ifProp(\n    'isExpanded',\n    '0px 4px 12px rgba(224, 230, 238, 0.5)',\n    '0px 2px 1px rgba(196, 196, 196, 0.2)'\n  )};\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-radius: ${ifProp('isExpanded', '4px 4px 0 0', '4px')};\n  padding: 1em;\n  margin: 0.5em 0 0 0;\n  z-index: 1;\n  box-sizing: border-box;\n`;\n\nexport default Row;\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { ArrowOpen, ArrowClose } from 'Assets/Icons';\nimport { IconButton, RowTitle } from 'Common/components';\nimport { Row } from './components';\n\ntype Props = {\n  title: string;\n  renderExpanded?: boolean;\n};\n\nconst ExpandableRow: React.FC<Props> = ({ title, renderExpanded = false, children }) => {\n  const [isExpanded, setIsExpanded] = useState(renderExpanded);\n  const handleClick = () => setIsExpanded((status) => !status);\n\n  return (\n    <>\n      <Row isExpanded={isExpanded}>\n        <RowTitle>{title}</RowTitle>\n        <IconButton handleClick={handleClick}>\n          {isExpanded ? <ArrowClose /> : <ArrowOpen />}\n        </IconButton>\n      </Row>\n      {isExpanded && children}\n    </>\n  );\n};\n\nexport default ExpandableRow;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport default StyledButton;\n","import * as React from 'react';\n\nimport { StyledButton as Button } from './components';\n\ntype Props = {\n  handleClick?: () => void;\n};\n\nconst IconButton: React.FC<Props> = ({ handleClick, children }) => {\n  return <Button onClick={handleClick}>{children}</Button>;\n};\n\nexport default IconButton;\n","import styled from 'styled-components';\n\nconst RowTitle = styled.p`\n  margin: 0;\n  align-self: flex-start;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 19px;\n  color: #00687f;\n`;\n\nexport default RowTitle;\n","import { gql } from '@apollo/client';\n\nexport const fetchMoviesQuery = gql`\n  query {\n    allFilms {\n      films {\n        title\n        id\n      }\n    }\n  }\n`;\n\nexport const fetchMoviePlanets = gql`\n  query($id: ID) {\n    film(id: $id) {\n      planetConnection {\n        planets {\n          name\n          rotationPeriod\n          orbitalPeriod\n          diameter\n          climates\n          surfaceWater\n          population\n        }\n      }\n    }\n  }\n`;\n\nexport const fetchAllPlanets = gql`\n  {\n    allPlanets {\n      planets {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const fetchAllPlanetsWithDetails = gql`\n  query {\n    allPlanets {\n      planets {\n        id\n        name\n        rotationPeriod\n        orbitalPeriod\n        diameter\n        climates\n        surfaceWater\n        population\n      }\n    }\n  }\n`;\n","import { useQuery, QueryResult } from '@apollo/client';\nimport { path } from 'ramda';\n\nimport { fetchMoviePlanets } from 'Common/services/queries';\n\ntype Variables = {\n  id: string;\n};\n\ntype Planets = {\n  name: string;\n  diameter: number;\n  orbitalPeriod: number;\n  population: number;\n  rotationPeriod: number;\n  surfaceWater: number;\n  climates: string[];\n};\n\ntype PlanetResponse = {\n  film: {\n    planetConnection: {\n      planets: Planets[];\n    };\n  };\n};\n\nconst usePlanetsByMovieId = ({ filmId }: { filmId: string }): QueryResult => {\n  const { loading, data, ...rest } = useQuery<PlanetResponse, Variables>(fetchMoviePlanets, {\n    variables: { id: filmId },\n  });\n\n  const planets = path(['film', 'planetConnection', 'planets'], data);\n\n  return { ...rest, loading, data: planets };\n};\n\nexport default usePlanetsByMovieId;\n","import { useQuery, QueryResult } from '@apollo/client';\nimport { path } from 'ramda';\n\nimport { fetchMoviesQuery } from 'Common/services/queries';\nimport type { Film } from 'Common/types';\n\ntype FilmsResponse = {\n  allFilms: {\n    films: Film[];\n  };\n};\n\nconst useFilms = (): QueryResult => {\n  const { data, ...rest } = useQuery<FilmsResponse>(fetchMoviesQuery);\n\n  const films: Film[] | null = path(['allFilms', 'films'], data)  || null;\n  return { ...rest, data: films };\n};\n\nexport default useFilms;\n","import { useQuery, QueryResult } from '@apollo/client';\nimport { path } from 'ramda';\n\nimport { fetchAllPlanets } from 'Common/services/queries';\nimport type { PlanetPreview } from 'Common/types';\n\ntype PlanetsResponse = {\n  allPlanets: {\n    planets: PlanetPreview[];\n  };\n};\n\nconst useAllPlanets = (): QueryResult => {\n  const { data, ...rest } = useQuery<PlanetsResponse>(fetchAllPlanets);\n\n  const planets: PlanetPreview[] | null =\n    path(['allPlanets', 'planets'], data) || null;\n\n  return { ...rest, data: planets };\n};\n\nexport default useAllPlanets;\n","import styled from 'styled-components';\n\nconst StyledTable = styled.table`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 14px;\n    width: 100%;\n    color: #474747;\n    border-collapse: collapse;\n    padding: 1em;\n`;\n\nexport default StyledTable;\n","import styled from 'styled-components';\n\nconst StyledTHead = styled.thead`\n  border-bottom: 1px solid #C4C4C4;\n`;\n\nexport default StyledTHead;\n","import styled from 'styled-components';\n\nconst StyledTh = styled.th`\n  padding: 1em 0;\n  font-weight: normal;\n  text-align: right;\n  word-break: break-all;\n\n  &:first-of-type {\n    color: #00687F;\n    text-align: left;\n    min-width: 20%;\n  }\n`;\n\nexport default StyledTh;\n","import styled from 'styled-components';\n\nconst StyledTr = styled.tr`\n  padding: 1em;\n  font-weight: normal;\n  text-align: left;\n  word-wrap: break-word;\n`;\n\nexport default StyledTr;\n","import styled from 'styled-components';\n\nconst StyledTd = styled.td`\n  padding: 1em 0;\n  text-align: right;\n\n  &:first-of-type {\n    text-align: left;\n    color: #00687f;\n  }\n`;\n\nexport default StyledTd;\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useTable, useSortBy, Column } from 'react-table';\n\nimport type { Planet } from 'Common/types';\n\nimport { StyledTable, THead, Th, Td } from './components';\n\ntype Props = {\n  planets: Planet[];\n};\n\nconst Table: React.FC<Props> = ({ planets }) => {\n  const columns: Column<Planet>[] = useMemo(\n    () => [\n      {\n        Header: 'Planet Name',\n        accessor: 'name',\n        id: 'name',\n      },\n      {\n        Header: 'Rotation period',\n        accessor: 'rotationPeriod',\n        id: 'rotationPeriod',\n      },\n      {\n        Header: 'Orbital period',\n        accessor: 'orbitalPeriod',\n        id: 'orbitalPeriod',\n      },\n      {\n        Header: 'Diameter period',\n        accessor: 'diameter',\n        id: 'diameter',\n      },\n      {\n        Header: 'Climate',\n        accessor: 'climates',\n        id: 'climates',\n      },\n      {\n        Header: 'Surface water',\n        accessor: 'surfaceWater',\n        id: 'surfaceWater',\n      },\n      {\n        Header: 'Population',\n        accessor: 'population',\n        id: 'population',\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data: planets,\n    },\n    useSortBy\n  );\n\n  const renderArrow = (column: any) =>\n    column.isSorted ? (column.isSortedDesc ? '🔽' : '🔼') : '';\n\n  return (\n    <div style={{ padding: '1em' }}>\n      <StyledTable {...getTableProps()}>\n        <THead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // react-table is lacking some types\n                // @ts-ignore\n                <Th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>{renderArrow(column)}</span>\n                </Th>\n              ))}\n            </tr>\n          ))}\n        </THead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <Td {...cell.getCellProps()}>{cell.render('Cell')}</Td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default Table;\n","import styled from 'styled-components';\n\nconst MobileTableRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 1em;\n  gap: 1em;\n`;\n\nexport default MobileTableRow;\n","import styled from 'styled-components';\n\nconst MobileTableWrapper = styled.div`\n  padding: 1em;\n\n  &:nth-child(2n) {\n    background: rgba(229, 229, 229, 0.5);\n  }\n`;\n\nexport default MobileTableWrapper;\n","import * as React from 'react';\nimport { equals } from 'ramda';\nimport { isMobile } from 'react-device-detect';\n\nimport { Planet } from 'Common/types';\nimport { MobileTableRow, MobileTableWrapper } from './components';\nimport Table from '../Table/Table';\n\nconst getPropertyName = (key: string) => {\n  switch (key) {\n    case 'name':\n      return 'Planet name';\n    case 'climates':\n      return 'Climate';\n    case 'rotationPeriod':\n      return 'Rotation Period';\n    case 'orbitalPeriod':\n      return 'Orbital Period';\n    case 'surfaceWater':\n      return 'Surface Water';\n    case 'population':\n      return 'Population';\n    case 'diameter':\n      return 'Diameter';\n    default:\n      return 'Unknown';\n  }\n};\n\nconst MobileTable = ({ planets }: Props) => {\n  const filteredPlanet = planets.map(({ __typename, id, ...rest }: Planet) => {\n    return { ...rest };\n  });\n\n  return (\n    <>\n      {filteredPlanet.map((planet) => {\n        return (\n          <MobileTableWrapper>\n            <MobileTableRow>\n              {Object.entries(planet).map(([key, value]) => {\n                return (\n                  <>\n                    <div>{getPropertyName(key)}</div>\n                    <div\n                      style={equals('name', key) ? { color: '#00687F' } : {}}\n                    >\n                      {value || 'unknown'}\n                    </div>\n                  </>\n                );\n              })}\n            </MobileTableRow>\n          </MobileTableWrapper>\n        );\n      })}\n    </>\n  );\n};\n\ntype Props = {\n  planets: Planet[];\n};\n\nconst TableWrapper = ({ planets }: Props) =>\n  isMobile ? <MobileTable planets={planets} /> : <Table planets={planets} />;\n\nexport default TableWrapper;\n","import * as React from 'react';\n\nimport { usePlanetsByMovieId } from 'Common/hooks';\nimport { LoadingBox, TableContainer } from 'Common/components';\nimport { TableWrapper } from './components';\n\ntype Props = {\n  filmId: string;\n};\n\nconst FilmTable: React.ElementType = ({ filmId }: Props) => {\n  const { data: planets, loading } = usePlanetsByMovieId({ filmId });\n\n  return (\n    <TableContainer>\n      {!loading ? <TableWrapper planets={planets} /> : <LoadingBox />}\n    </TableContainer>\n  );\n};\n\nexport default FilmTable;\n","import * as React from 'react';\n\nimport { ExpandableRow } from 'Common/components';\n\nimport { FilmTable } from './components';\n\ntype Props = {\n  title: string;\n  filmId: string;\n};\n\nconst FilmRow: React.FC<Props> = ({ title, filmId }) => {\n  return (\n    <ExpandableRow title={title} key={filmId}>\n      <FilmTable filmId={filmId} />\n    </ExpandableRow>\n  );\n};\n\nexport default FilmRow;\n","import * as React from 'react';\nimport { isNil } from 'ramda';\n\nimport { FilmRow, LoadingBox } from 'Common/components';\nimport type { Film } from 'Common/types';\nimport { useFilms } from 'Common/hooks';\n\nconst FilmsWrapper = () => {\n  const { loading, data: films } = useFilms();\n\n  return (\n    <>\n      {!loading && !isNil(films) ? (\n        films.map((film: Film) => (\n          <FilmRow title={film.title} filmId={film.id} key={film.id} />\n        ))\n      ) : (\n        <LoadingBox />\n      )}\n    </>\n  );\n};\n\nexport default FilmsWrapper;\n","export type ReduxAction<T> = {\n  type: string;\n  payload?: T;\n};\n\nconst createAction = <T>(type: string, payload?: T): ReduxAction<T> => {\n  return {\n    type,\n    payload,\n  };\n};\n\nexport default createAction;\n","import { createType } from 'Core/utils';\n\nexport const addMovie = createType('MOVIE', 'ADD_MOVIE');\n","import createAction from 'Core/utils/createAction';\nimport { addMovie } from 'Core/actions';\n\nconst addMovieAction = (payload: any) => createAction(addMovie, payload);\n\nexport default addMovieAction;\n","import { PlanetPreview } from 'Common/types';\n\nconst getSuggestedPlanets = (planets: PlanetPreview[], partialName: string) => {\n  return planets.filter((planet) => planet.name.toLocaleLowerCase().includes(partialName.toLocaleLowerCase()));\n};\n\nexport default getSuggestedPlanets;\n","import styled from 'styled-components';\nimport { theme } from 'styled-tools';\n\nconst StyledInput = styled.input`\n  padding: 0.5em 0;\n  width: 100%;\n  border: none;\n  border-bottom: 1px solid #999999;\n  border-radius: 0;\n  font-size: 16px;\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #999999;\n  }\n`;\n\nexport default StyledInput;","import styled from 'styled-components';\nimport { theme } from 'styled-tools';\n\nconst StyledFrom = styled.form`\n  width: 100%;\n  background-color: white;\n  padding: 1em;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n\n  @media ${theme('devices.tablet')} {\n    padding: 2em 8em;\n  }\n`;\n\nexport default StyledFrom;\n","import styled, { css } from 'styled-components';\nimport { ifProp } from 'styled-tools';\n\ntype Props = {\n  hasError?: boolean;\n};\n\nconst StyledLabel = styled.label<Props>`\n  position: absolute;\n  left: 0;\n  top: -1em;\n  font-size: 12px;\n\n  ${ifProp(\n    'hasError',\n    css`\n      color: #ff1616;\n    `\n  )}\n`;\n\nexport default StyledLabel;\n","import styled from 'styled-components';\n\nconst AutosuggestWrapper = styled.div`\n  & .react-autosuggest__container {\n    input {\n      padding: 0.5em 0;\n      width: 100%;\n      border: none;\n      border-bottom: 1px solid #999999;\n      border-radius: 0;\n      font-size: 16px;\n\n      &:focus {\n        outline: none;\n        border-bottom: 2px solid #999999;\n      }\n    }\n  }\n\n  & .react-autosuggest__suggestions-list {\n    width: 100%;\n    list-style-type: none;\n    border: 1px solid #e5e5e5;\n    box-sizing: border-box;\n    box-shadow: 0px 4px 4px rgba(196, 196, 196, 0.5);\n    padding: 0;\n    max-height: 20vh;\n    overflow: scroll;\n\n    li {\n      cursor: pointer;\n      padding: 1em;\n\n      &:hover {\n        background-color: gray;\n      }\n    }\n  }\n`;\n\nexport default AutosuggestWrapper;\n","import styled from 'styled-components';\n\nconst PlanetButtonWrapper = styled.div`\n  font-family: 'Barlow';\n  border: 1px solid #999999;\n  box-sizing: border-box;\n  border-radius: 18px;\n  font-size: 16px;\n  padding: 0.5em 1em;\n  background-color: white;\n  margin: 0.5em 0.5em 0.5em 0;\n`;\n\nexport default PlanetButtonWrapper;\n","import styled from 'styled-components';\n\nconst PlanetsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport default PlanetsWrapper;\n","import styled from 'styled-components';\n\nconst FieldError = styled.div`\n  position: absolute;\n  cursor: pointer;\n  z-index: 1;\n  left: 0;\n  padding: 0.5em;\n  color: #ff1616;\n  border: 1px solid #ff1616;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 4px rgba(196, 196, 196, 0.5);\n  background-color: white;\n  user-select: none;\n  width: 70%;\n`;\n\nexport default FieldError;\n","import styled, { css } from 'styled-components';\nimport { ifProp, theme } from 'styled-tools';\n\ntype Props = {\n  hasError?: boolean;\n};\n\nconst SubmitButton = styled.button<Props>`\n  padding: 1em 3em;\n  background: #1ba1be;\n  border-radius: 4px;\n  text-transform: uppercase;\n  color: white;\n  font-weight: bold;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin-top: 1em;\n\n  @media ${theme('devices.tablet')} {\n    align-self: flex-end;\n  }\n\n  ${ifProp('hasError', css`\n    background: #E0E6EE;\n    pointer-events: none;\n  `)}\n`;\n\nexport default SubmitButton;\n","import styled from 'styled-components';\nimport { Search as Icon } from 'Assets/Icons';\n\nconst Search = styled(Icon)`\n  position: absolute;\n  right: 0;\n  top: 0.5em;\n`;\n\nexport default Search;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useField, FormikErrors, FieldArray, FormikTouched } from 'formik';\nimport Autosuggest from 'react-autosuggest';\nimport { propEq, isEmpty, isNil, filter } from 'ramda';\n\nimport { usePlanets } from 'Common/hooks';\nimport { getSuggestedPlanets } from 'Common/helpers';\nimport { Close } from 'Assets/Icons';\nimport { IconButton } from 'Common/components';\nimport {\n  Input,\n  Label,\n  AutosuggestWrapper,\n  PlanetButtonWrapper,\n  PlanetsWrapper,\n  FieldError,\n  SubmitButton,\n  SearchIcon,\n} from './components';\nimport { PlanetPreview } from 'Common/types';\n\ntype Props = {\n  setFieldValue: (field: string, value: string) => void;\n  errors?: FormikErrors<{\n    movieTitle: string;\n    planets: string;\n  }>;\n  touched?: FormikTouched<{\n    movieTitle: boolean;\n    planets: boolean;\n  }>;\n  addedPlanets: PlanetPreview[];\n};\n\nconst AddMovieForm = ({\n  setFieldValue,\n  errors,\n  addedPlanets,\n  touched,\n}: Props) => {\n  const { data, loading } = usePlanets();\n  const [suggestions, setSuggestions] = useState<PlanetPreview[]>([]);\n  const [autosuggestValue, setAutosuggestValue] = useState<string>('');\n  const [field] = useField({\n    name: 'movieTitle',\n    placeholder: 'Please enter the title of the movie',\n  });\n\n  useEffect(() => {\n    if (!isNil(data) && !loading && !isEmpty(autosuggestValue)) {\n      setSuggestions(getSuggestedPlanets(data, autosuggestValue));\n    }\n  }, [autosuggestValue, data, loading]);\n\n  const getSuggestionValue = (suggestion: PlanetPreview) =>\n    suggestion.name || '';\n\n  const renderSuggestion = (suggestion: PlanetPreview) => (\n    <div>{suggestion.name}</div>\n  );\n\n  const removePlanetFromSelected = (planetId: string) => {\n    const newArr: PlanetPreview[] = addedPlanets.filter((planet) => {\n      if (!propEq('id', planetId, planet)) {\n        return planet;\n      }\n    });\n    setFieldValue('planets', newArr as any);\n  };\n\n  const renderSelectedPlanets = () => {\n    return addedPlanets.map((planet) => {\n      return (\n        <PlanetButtonWrapper>\n          {planet.name}\n          <IconButton handleClick={() => removePlanetFromSelected(planet.id)}>\n            <Close />\n          </IconButton>\n        </PlanetButtonWrapper>\n      );\n    });\n  };\n\n  const isPlanetAdded = (id: string) =>\n    !isEmpty(filter(propEq('id', id))(addedPlanets));\n\n  return (\n    <>\n      <div style={{ position: 'relative', marginTop: '1em' }}>\n        <Label hasError={!isNil(errors?.movieTitle) && touched?.planets}>\n          Movie title\n        </Label>\n        <div style={{ position: 'relative' }}>\n          <Input {...field} placeholder=\"Please enter the title of the movie\" />\n          <SearchIcon />\n        </div>\n\n        {!isNil(errors?.movieTitle) && touched?.movieTitle && (\n          <FieldError>{errors?.movieTitle}</FieldError>\n        )}\n      </div>\n\n      <PlanetsWrapper>{renderSelectedPlanets()}</PlanetsWrapper>\n\n      <div style={{ position: 'relative', marginTop: '1em' }}>\n        <Label hasError={!isNil(errors?.planets) && touched?.planets}>\n          Movie planets\n        </Label>\n        <AutosuggestWrapper>\n          <FieldArray\n            name=\"planets\"\n            render={(arrayHelpers) => (\n              <Autosuggest\n                suggestions={suggestions}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                onSuggestionsFetchRequested={() => undefined}\n                inputProps={{\n                  placeholder: 'Type someting',\n                  value: autosuggestValue,\n                  onChange: (e: any, { newValue }) => {\n                    setAutosuggestValue(newValue);\n                  },\n                }}\n                onSuggestionSelected={(e, { suggestion }) => {\n                  const { name, id } = suggestion;\n                  setAutosuggestValue('');\n                  if (!isPlanetAdded(id)) {\n                    arrayHelpers.push({ name, id });\n                  }\n                }}\n              />\n            )}\n          />\n\n          {!isNil(errors?.planets) && touched?.planets && (\n            <FieldError>{errors?.planets}</FieldError>\n          )}\n        </AutosuggestWrapper>\n      </div>\n\n      <SubmitButton type=\"submit\" hasError={!isEmpty(errors)}>\n        Add Movie\n      </SubmitButton>\n    </>\n  );\n};\n\nexport default AddMovieForm;\n","import * as React from 'react';\nimport { Formik, FormikErrors, FormikTouched } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport addMovieAction from 'Common/actions/addMovieAction';\nimport { PlanetPreview } from 'Common/types';\nimport { AddMovieFields } from './components';\nimport { Form } from './components/AddMoveFields/components';\n\nconst addMovieSchema = Yup.object().shape({\n  movieTitle: Yup.string()\n    .required('Movie title is required!')\n    .matches(/^[A-Z]/, 'Movie title name must start with a capital letter')\n    .min(3, \"The title is too short\"),\n  planets: Yup.array()\n    .min(1, 'Add at least one planet to your movie')\n    .required(),\n});\n\ntype FormValues = {\n  movieTitle: string;\n  planets: PlanetPreview[];\n};\n\nconst AddMovie = () => {\n  const initValues: FormValues = {\n    movieTitle: '',\n    planets: [],\n  };\n\n  const dispatch = useDispatch();\n\n  const submitForm = (vals: FormValues) => {\n    dispatch(addMovieAction(vals));\n  };\n\n  return (\n    <Formik\n      initialValues={initValues}\n      onSubmit={(vals: FormValues, { resetForm }) => {\n        submitForm(vals);\n        resetForm();\n      }}\n      validationSchema={addMovieSchema}\n    >\n      {({\n        handleReset,\n        handleSubmit,\n        errors,\n        setFieldValue,\n        values,\n        touched,\n      }) => (\n        <Form\n          onReset={handleReset}\n          onSubmit={handleSubmit}\n        >\n          <AddMovieFields\n            setFieldValue={setFieldValue}\n            errors={\n              errors as FormikErrors<{ planets: string; movieTitle: string }>\n            }\n            touched={\n              touched as FormikTouched<{\n                planets: boolean;\n                movieTitle: boolean;\n              }>\n            }\n            addedPlanets={values.planets}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddMovie;\n","import * as React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { pathOr } from 'ramda';\n\nimport { ExpandableRow, TableContainer } from 'Common/components';\nimport { PlanetPreview } from 'Common/types';\nimport { fetchAllPlanetsWithDetails } from 'Common/services/queries';\nimport { TableWrapper } from 'Common/components/FilmRow/components/FilmTable/components/';\n\nconst CustomMovie = ({\n  title,\n  planets,\n}: {\n  title: string;\n  planets: PlanetPreview[];\n}) => {\n  const { loading, data } = useQuery(fetchAllPlanetsWithDetails);\n  const requiredIds = planets.map((planet) => planet.id);\n\n  const requiredPlanets = pathOr(\n    [],\n    ['allPlanets', 'planets']\n  )(data).filter((planet: any) => requiredIds.includes(planet.id));\n\n  return (\n    <ExpandableRow title={title} key={title}>\n      <TableContainer>\n        <TableWrapper planets={requiredPlanets} />\n      </TableContainer>\n    </ExpandableRow>\n  );\n};\n\nexport default CustomMovie;\n","import * as React from 'react';\nimport { isNil } from 'ramda';\nimport { useSelector } from 'react-redux';\n\nimport type { ReduxState } from 'Core/store';\nimport { CustomMovie } from './components';\n\nconst ManuallyAddedMovies = () => {\n  const movies = useSelector((state: ReduxState) => state.movies?.movies);\n\n  return (\n    <>\n      {!isNil(movies)\n        ? movies.map((movie) => (\n            <CustomMovie title={movie.title} planets={movie.planets} />\n          ))\n        : null}\n    </>\n  );\n};\n\nexport default ManuallyAddedMovies;\n","import styled from 'styled-components';\n\nconst PageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default PageContainer;\n","import styled from 'styled-components';\n\nconst LoadingWrapper = styled.div`\n  min-height: 30vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default LoadingWrapper;\n","import * as React from 'react';\n\nimport { Loading } from 'Assets/Icons';\n\nimport { LoadingWrapper } from './components';\n\nconst LoadingBox = () => {\n  return (\n    <LoadingWrapper>\n      <Loading />\n    </LoadingWrapper>\n  );\n};\n\nexport default LoadingBox;\n","import styled from 'styled-components';\n\nconst TableContainer = styled.div`\n  background-color: white;\n  width: 100%;\n  box-shadow: 0px 2px 1px rgba(196, 196, 196, 0.2);\n  box-sizing: border-box;\n`;\n\nexport default TableContainer;\n","import styled from 'styled-components';\n\nexport default styled.svg.attrs({\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg',\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\n})``;\n","import styled from 'styled-components';\n\nimport { StyledSvg } from 'Common/components';\n\nconst Svg = styled(StyledSvg)``;\n\nexport default Svg;\n","import { MainPage } from 'Pages';\nimport { RoutesType } from './types';\n\nconst ROUTES: RoutesType[] = [\n  {\n    path: '/',\n    exact: true,\n    component: MainPage,\n  },\n];\n\nexport default ROUTES;\n","import * as React from 'react';\n\nimport {\n  Layout,\n  DashedLine,\n  ExpandableRow,\n  FilmsWrapper,\n  AddMovie,\n  ManuallyAddedMovies,\n  PageContainer,\n} from 'Common/components';\n\nconst ROW_TITLE = 'Add movie';\n\nconst MainPage = () => {\n  return (\n    <PageContainer>\n      <Layout>\n        <FilmsWrapper />\n        <ManuallyAddedMovies />\n        <DashedLine />\n        <ExpandableRow title={ROW_TITLE} renderExpanded>\n          <AddMovie />\n        </ExpandableRow>\n      </Layout>\n    </PageContainer>\n  );\n};\n\nexport default MainPage;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addMovie } from 'Core/actions';\nimport { PlanetPreview } from 'Common/types';\n\ntype ManuallyAddedMovie = {\n  title: string;\n  planets: PlanetPreview[];\n};\n\ntype MovieState = {\n  movies: ManuallyAddedMovie[];\n};\n\nconst initialState: MovieState = {\n  movies: [],\n};\n\ntype AddMovieActionType<T> = {\n  type: string;\n  payload: T;\n};\n\nconst movieReducer = createReducer(initialState, {\n  [addMovie]: (\n    state: MovieState,\n    {\n      payload,\n    }: AddMovieActionType<{ movieTitle: string; planets: PlanetPreview[] }>\n  ) =>\n    {\n      const { movieTitle, planets } = payload;\n      const newEntry: ManuallyAddedMovie = {\n        title: movieTitle,\n        planets,\n      };\n      state.movies.push(newEntry);\n    },\n});\n\nexport { movieReducer };\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { movieReducer } from 'Core/reducers';\n\nconst rootReducer = combineReducers({\n  movies: movieReducer,\n});\n\nconst store = createStore(rootReducer, {}, composeWithDevTools());\nexport type ReduxState = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import * as React from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\n\n\nimport devices from 'Core/styles/theme/devices';\nimport client from 'Common/services/queryClient';\nimport routes from 'Core/routes';\nimport store from 'Core/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={{\n          devices\n        }}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              {routes.map(({ component: Component, path, ...rest }) => (\n                <Route\n                  render={() => <Component />}\n                  path={path}\n                  key={path}\n                  {...rest}\n                />\n              ))}\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}